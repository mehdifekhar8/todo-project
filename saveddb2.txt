import {
  newSmart,
  useRouter,
  useUIComponents,
  useTranslate,
} from "@bluelibs/x-ui";
import { useEffect, useState, useMemo } from "react";
import React, { Component } from 'react';

import { TodoAntTableSmart } from "./TodoTableSmart";
import { PlusOutlined, FilterOutlined } from "@ant-design/icons";
import * as Ant from "antd";
import { Routes } from "@bundles/UIAppBundle";
import { features } from "../../config/features";
import { TodoListFilters } from "./TodoListFilters";
import { render } from "react-dom";

export default class TodoList2 extends Component{ 
  state = {
    tasks: [
        {name:"Hit the gym",category:"todo", bgcolor: "#FFB695"},
        {name:"Get breakfast", category:"todo", bgcolor:"#96D1CD"},
      ]
}
onDragOver = (ev) => {
    ev.preventDefault();
}
onDrop = (ev, cat) => {
   let id = ev.dataTransfer.getData("id");
   
   let tasks = this.state.tasks.filter((task) => {
       if (task.name == id) {
           task.category = cat;
       }
       return task;
   });

   this.setState({
       ...this.state,
       tasks
   });
}

onDragStart = (ev, id) => {
    console.log('dragstart:',id);
    ev.dataTransfer.setData("id", id);
}

render() {


    var tasks = {
        todo: [],
        done: []
    }

    

this.state.tasks.forEach ((t) => {
    tasks[t.category].push(
        <div key={t.name} 
            onDragStart = {(e) => this.onDragStart(e, t.name)}
            draggable
            className="draggable"
            style = {{backgroundColor: t.bgcolor}}
            >
            {t.name}
        </div>
    );
});

    return (
        <div className="container-drag">
            <h2 className="header">DRAG & DROP DEMO</h2>
            <div className="todo"
                onDragOver={(e)=>this.onDragOver(e)}
                onDrop={(e)=>{this.onDrop(e, "todo")}}>
                <span className="task-header">To-Do List</span>
                {tasks.todo}
            </div>
            <div className="droppable" 
                onDrop={(e)=>this.onDrop(e, "done")}
                onDragOver={(ev)=>this.onDragOver(ev)}>
                <span className="task-header">COMPLETED</span>
                {tasks.done}
            </div>


        </div>
    );
}


  

}
export function TodoList() {
  const UIComponents = useUIComponents();
  const router = useRouter();
  const t = useTranslate();
  const [api, Provider] = newSmart(TodoAntTableSmart);
  console.log(api.getSortMap())

  const [filtersOpened, setFiltersOpened] = useState(false);
  const onFiltersUpdate = useMemo(() => {
    return (filters) => {
      api.setFlexibleFilters(filters);
    };
  }, []);

  return (
    <UIComponents.AdminLayout>
      <Ant.PageHeader
        title={t("management.todo.list.header")}
        extra={[
          features.create ? (
            <Ant.Button
              key="1"
              onClick={() => router.go(Routes.TODO_CREATE)}
              icon={<PlusOutlined />}
            >
              {t("management.todo.list.create_btn")}
            </Ant.Button>
          ) : null,
          <Ant.Button
            key="2"
            onClick={() => setFiltersOpened(!filtersOpened)}
            icon={<FilterOutlined />}
          >
            {t("generics.list_filters")}
          </Ant.Button>,
        ]}
      />

      {api.state.isError && (
        <Ant.Alert type="error" message={t("generics.error_message")} />
      )}

      <Ant.Layout.Content>
        <Provider>
          <div className="page-todo-list">
            {filtersOpened && <TodoListFilters onUpdate={onFiltersUpdate} />}
            <Ant.Input.Search
              name="Search"
              placeholder={t("generics.list_search")}
              className="search"
              onKeyUp={(e) => {
                const value = (e.target as HTMLInputElement).value;
                api.setFilters({
                  // Customise your search filters!
                  title: new RegExp(`${value}`, "i"),
                });
              }}
            />
            <Ant.Table {...api.getTableProps()} />
          </div>
          <TodoList2></TodoList2>

        </Provider>
      </Ant.Layout.Content>
    </UIComponents.AdminLayout>
  );
}

